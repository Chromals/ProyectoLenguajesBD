-- Creación de la Tabla Sucursal
CREATE TABLE Sucursal (
    ID_Sucursal NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Nombre VARCHAR2(50) NOT NULL,
    ID_Direccion NUMBER NOT NULL,
    CONSTRAINT PK_Sucursal PRIMARY KEY (ID_Sucursal)
);

-- Creación de la Tabla Trabajador
CREATE TABLE Trabajador (
    ID_Trabajador NUMBER NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Apellido_1 VARCHAR2(50) NOT NULL,
    Apellido_2 VARCHAR2(50) NOT NULL,
    Cargo VARCHAR2(100) NOT NULL,
    Salario NUMBER(18, 2) NOT NULL,
    Activo NUMBER(1) NOT NULL,
    Fecha_Inicio DATE NOT NULL,
    ID_Sucursal NUMBER NOT NULL,
    ID_Direccion NUMBER NOT NULL,
    CONSTRAINT PK_Trabajador PRIMARY KEY (ID_Trabajador)
);

-- Creación de la Tabla Cliente
CREATE TABLE Cliente (
    ID_Cliente NUMBER NOT NULL,
    Nombre VARCHAR2(100) NOT NULL,
    Apellido_1 VARCHAR2(100) NOT NULL,
    Apellido_2 VARCHAR2(100) NOT NULL,
    Telefono NUMBER NOT NULL,
    Correo VARCHAR2(200) NOT NULL,
    ID_Direccion NUMBER NOT NULL,
    CONSTRAINT PK_Cliente PRIMARY KEY (ID_Cliente)
);

-- Creación de la Tabla Direccion
CREATE TABLE Direccion (
    ID_Direccion INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Provincia VARCHAR2(100) NOT NULL,
    Canton VARCHAR2(100) NOT NULL,
    Distrito VARCHAR2(100) NOT NULL
);

-- Creación de la Tabla Proveedor
CREATE TABLE Proveedor (
    ID_Proveedor INT PRIMARY KEY,
    Nombre VARCHAR2(50) NOT NULL,
    Apellido_1 VARCHAR2(50) NOT NULL,
    Apellido_2 VARCHAR2(50) NOT NULL,
    Telefono INT NOT NULL,
    Correo VARCHAR2(150) NOT NULL,
    ID_Direccion INT NOT NULL,
    FOREIGN KEY (ID_Direccion) REFERENCES Direccion(ID_Direccion)
);

-- Creación de la Tabla Producto
CREATE TABLE Producto (
    ID_Producto NUMBER NOT NULL,
    Nombre VARCHAR2(50) NOT NULL,
    Descripcion VARCHAR2(200) NOT NULL,
    Precio NUMBER(18, 2) NOT NULL,
    ID_Categoria NUMBER NOT NULL,
    cantidad NUMBER,
    CONSTRAINT PK_Producto PRIMARY KEY (ID_Producto)
);

-- Creación de la Tabla Venta
CREATE TABLE Venta (
    ID_Venta NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ID_Producto NUMBER NOT NULL,
    ID_Sucursal NUMBER NOT NULL,
    ID_Cliente NUMBER NOT NULL,
    Cantidad_Vendida NUMBER NOT NULL,
    Total_Venta NUMBER(18, 2) NOT NULL,
    Fecha DATE NOT NULL,
    CONSTRAINT PK_Venta PRIMARY KEY (ID_Venta)
);

-- Creación de la Tabla Inventario
CREATE TABLE Inventario (
    ID_Inventario NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ID_Producto NUMBER NOT NULL,
    ID_Sucursal NUMBER NOT NULL,
    Cantidad_Disponible NUMBER NOT NULL,
    Fecha_Actualizacion DATE NOT NULL,
    CONSTRAINT PK_Inventario PRIMARY KEY (ID_Inventario)
);

-- Creación de la Tabla Auditoria
CREATE TABLE Auditoria (
    id_Auditoria NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Fecha DATE,
    Operacion VARCHAR2(200),
    ID_Trabajador NUMBER,
    Detalles VARCHAR2(200),
    CONSTRAINT PK_Auditoria PRIMARY KEY (id_Auditoria)
);

-- Creación de la Tabla Categoria
CREATE TABLE Categoria (
    ID_Categoria NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    Nombre VARCHAR2(50) NOT NULL,
    CONSTRAINT PK_Categoria PRIMARY KEY (ID_Categoria)
);

-- Creación de la Tabla CompraProductos
CREATE TABLE CompraProductos (
    ID_Compra_Producto NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ID_Proveedor NUMBER NOT NULL,
    ID_Producto NUMBER NOT NULL,
    Cantidad_Comprada NUMBER NOT NULL,
    Costo_Total NUMBER(18, 2) NOT NULL,
    Fecha_Compra DATE NOT NULL,
    CONSTRAINT PK_CompraProductos PRIMARY KEY (ID_Compra_Producto)
);

-- Creación de la Tabla Devolucion
CREATE TABLE Devolucion (
    ID_Devolucion NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ID_Venta NUMBER NOT NULL,
    Motivo VARCHAR2(300) NOT NULL,
    Fecha DATE NOT NULL,
    CONSTRAINT PK_Devolucion PRIMARY KEY (ID_Devolucion)
);

-- Creación de la Vista Trabajadores_sucursal_44
CREATE OR REPLACE VIEW Trabajadores_sucursal_44 AS 
SELECT s.Nombre AS Sucursal, 
       t.Cargo, 
       t.Nombre || ' ' || t.Apellido_1 || ' ' || t.Apellido_2 AS Trabajador,
       t.Activo AS ACTIVO  
FROM Sucursal s
INNER JOIN Trabajador t 
ON s.ID_Sucursal = t.ID_Sucursal
WHERE s.Nombre = 'Sucursal Liberia' AND t.Activo = 1;

-- Creación de la Vista cantproducto_vendido
CREATE OR REPLACE VIEW cantproducto_vendido AS 
SELECT p.Nombre AS Producto, SUM(v.Cantidad_Vendida) AS Cantidad_vendida
FROM Producto p
INNER JOIN Venta v ON p.ID_Producto = v.ID_Producto
GROUP BY p.Nombre;

-- Creación de la Vista Vista_ProductosMasVendidos
CREATE OR REPLACE VIEW Vista_ProductosMasVendidos AS
SELECT p.Nombre AS Producto, SUM(v.Cantidad_Vendida) AS Cantidad_Total_Vendida, SUM(v.Total_Venta) AS Ingresos
FROM Venta v
JOIN Producto p ON v.ID_Producto = p.ID_Producto
GROUP BY p.Nombre
ORDER BY SUM(v.Cantidad_Vendida) DESC;

-- Creación de la Vista Vista_EstadoInventarioPorSucursal
CREATE OR REPLACE VIEW Vista_EstadoInventarioPorSucursal AS
SELECT s.Nombre AS Sucursal, p.Nombre AS Producto, i.Cantidad_Disponible AS Cantidad_Disponible, i.Fecha_Actualizacion AS Ultima_Actualizacion
FROM Inventario i
JOIN Sucursal s ON i.ID_Sucursal = s.ID_Sucursal
JOIN Producto p ON i.ID_Producto = p.ID_Producto;

-- Creación de la Vista Vista_ClienteCompras
CREATE OR REPLACE VIEW Vista_ClienteCompras AS 
SELECT 
       c.Nombre || ' ' || c.Apellido_1 || ' ' || c.Apellido_2 AS Cliente,
       p.Nombre AS Nombre_del_producto, 
       v.Cantidad_Vendida AS Cantidad_comprada, 
       v.Total_Venta AS Total, 
       v.Fecha AS Fecha_de_compra
FROM Cliente c
INNER JOIN Venta v ON c.ID_Cliente = v.ID_Cliente
INNER JOIN Producto p ON v.ID_Producto = p.ID_Producto
WHERE c.ID_Cliente = 1;

-- Reporte -  Creación de la Vista  de Trabajadores con mas de 5 años en la empresa

CREATE OR REPLACE VIEW Trabajadores_Con_Mas_5_Anios AS
SELECT 
	s.Nombre AS Sucursal, t.Nombre || ' ' || t.Apellido_1 || ' ' || t.Apellido_2 
	SELECT AS Trabajador, t.Fecha_Inicio, 
	ROUND(MONTHS_BETWEEN(SYSDATE, t.Fecha_Inicio) / 12, 2) AS Antigüedad 
FROM Trabajador t
JOIN Sucursal s ON t.ID_Sucursal = s.ID_Sucursal 
WHERE ROUND(MONTHS_BETWEEN(SYSDATE, t.Fecha_Inicio) / 12, 2) > 5
ORDER BY s.Nombre, t.Fecha_Inicio;

-- Reporte -  Creación de la Vista Productos con Bajo Inventario
CREATE OR REPLACE VIEW Bajo_inventario AS
SELECT
	p.Nombre AS Producto, i.Cantidad_Disponible, s.Nombre  AS Sucursal 
FROM Inventario i 
JOIN Producto p ON i.ID_Producto = p.ID_Producto 
JOIN Sucursal s ON i.ID_Sucursal = s.ID_Sucursal 
WHERE i.Cantidad_Disponible < 10;

-- Reporte -  Creación de la Vista cantidad de productos comprados a cada proveedor 
CREATE OR REPLACE VIEW productos_por_proveedor AS
SELECT 
    pr.Nombre || ' ' || pr.Apellido_1 || ' ' || pr.Apellido_2 AS Proveedor,
    COUNT(cp.ID_Compra_Producto) AS Total_Productos_Comprados
FROM 
    Proveedor pr
JOIN 
    CompraProductos cp ON pr.ID_Proveedor = cp.ID_Proveedor
GROUP BY 
    pr.Nombre, pr.Apellido_1, pr.Apellido_2
ORDER BY 
    Total_Productos_Comprados DESC;

-- Creación de constraints y foreign keys
ALTER TABLE Auditoria ADD CONSTRAINT FK_Auditoria_Trabajador FOREIGN KEY (ID_Trabajador) REFERENCES Trabajador(ID_Trabajador);
ALTER TABLE Cliente ADD CONSTRAINT FK_Cliente_Direccion FOREIGN KEY (ID_Direccion) REFERENCES Direccion(ID_Direccion);
ALTER TABLE CompraProductos ADD CONSTRAINT FK_CompraProductos_Producto FOREIGN KEY (ID_Producto) REFERENCES Producto(ID_Producto);
ALTER TABLE CompraProductos ADD CONSTRAINT FK_CompraProductos_Proveedor FOREIGN KEY (ID_Proveedor) REFERENCES Proveedor(ID_Proveedor);
ALTER TABLE Devolucion ADD CONSTRAINT FK_Devolucion_Venta FOREIGN KEY (ID_Venta) REFERENCES Venta(ID_Venta);
ALTER TABLE Inventario ADD CONSTRAINT FK_Inventario_Producto FOREIGN KEY (ID_Producto) REFERENCES Producto(ID_Producto);
ALTER TABLE Inventario ADD CONSTRAINT FK_Inventario_Sucursal FOREIGN KEY (ID_Sucursal) REFERENCES Sucursal(ID_Sucursal);
ALTER TABLE Producto ADD CONSTRAINT FK_Producto_Categoria FOREIGN KEY (ID_Categoria) REFERENCES Categoria(ID_Categoria);
ALTER TABLE Proveedor ADD CONSTRAINT FK_Proveedor_Direccion FOREIGN KEY (ID_Direccion) REFERENCES Direccion(ID_Direccion);
ALTER TABLE Sucursal ADD CONSTRAINT FK_Sucursal_Direccion FOREIGN KEY (ID_Direccion) REFERENCES Direccion(ID_Direccion);
ALTER TABLE Trabajador ADD CONSTRAINT FK_Trabajador_Direccion FOREIGN KEY (ID_Direccion) REFERENCES Direccion(ID_Direccion);
ALTER TABLE Trabajador ADD CONSTRAINT FK_Trabajador_Sucursal FOREIGN KEY (ID_Sucursal) REFERENCES Sucursal(ID_Sucursal);
ALTER TABLE Venta ADD CONSTRAINT FK_Venta_Cliente FOREIGN KEY (ID_Cliente) REFERENCES Cliente(ID_Cliente);
ALTER TABLE Venta ADD CONSTRAINT FK_Venta_Producto FOREIGN KEY (ID_Producto) REFERENCES Producto(ID_Producto);
ALTER TABLE Venta ADD CONSTRAINT FK_Venta_Sucursal FOREIGN KEY (ID_Sucursal) REFERENCES Sucursal(ID_Sucursal);
